parameters:
  # Required: A defined YAML queue
  queue: {}
phases:
- phase: publish_maestro_package
  queue: ${{ parameters.queue }}
  displayName: Publish Maestro Artifacts 
  steps:
  ## Build Maestro++ service fabric package
  - task: VSBuild@1
    inputs:
      solution: src/Maestro/MaestroApplication/MaestroApplication.sfproj
      vsVersion: 15.0
      msbuildArgs: /t:Package /p:PackageLocation=$(Build.ArtifactStagingDirectory)\ServiceFabric\Maestro\applicationpackage
      platform: x64
      configuration: $(BuildConfiguration)
      msbuildArchitecture: x64

  - powershell: |
      robocopy $(Build.ArtifactStagingDirectory)\ServiceFabric\Maestro\applicationpackage $(Build.ArtifactStagingDirectory)\ServiceFabric\Maestro\pdbs /S /MOV *.pdb
      exit 0
    displayName: Move Maestro pdbs

  - task: ServiceFabricUpdateManifests@2
    inputs:
      applicationPackagePath: $(Build.ArtifactStagingDirectory)\ServiceFabric\Maestro\applicationpackage

  - powershell: |
      robocopy src/Maestro/MaestroApplication/PublishProfiles $(Build.ArtifactStagingDirectory)\ServiceFabric\Maestro\projectartifacts\PublishProfiles /S *.xml
      robocopy src/Maestro/MaestroApplication/ApplicationParameters $(Build.ArtifactStagingDirectory)\ServiceFabric\Maestro\projectartifacts\ApplicationParameters /S *.xml
      exit 0
    displayName: Copy Maestro Project Artifacts

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)\ServiceFabric\
      ArtifactName: Service Fabric Packages
      ArtifactType: Container