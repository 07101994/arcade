<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net461;netcoreapp2.0</TargetFrameworks>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>7.2</LangVersion>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);PackageTfmSpecificAsATool</TargetsForTfmSpecificContentInPackage>
    <IsPackable>true</IsPackable>
    <Description>Build artifact signing tool</Description>
    <PackageTags>Arcade Build Tool Signing</PackageTags>
    <DevelopmentDependency>true</DevelopmentDependency>
  </PropertyGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.DotNet.SignTool.Tests" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(DynamicProxyGenAsm2Key)" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.FileSystemGlobbing" Version="$(MicrosoftExtensionsFileSystemGlobbingVersion)" />
    <PackageReference Include="System.Collections.Immutable" Version="$(SystemCollectionsImmutableVersion)" />
    <PackageReference Include="System.IO.Packaging" Version="$(SystemIOPackagingVersion)" />
    <PackageReference Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="$(MicrosoftBuildUtilitiesCoreVersion)" />
    <PackageReference Include="Microsoft.Build.Framework" Version="$(MicrosoftBuildFrameworkVersion)" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="System.IO.FileSystem.Primitives" Version="$(SystemIOFileSystemPrimitivesVersion)" />
  </ItemGroup>

  <!-- Just copy the .props and .target to the build folder. -->
  <ItemGroup>
    <Content Include="build\*" PackagePath="build\" />
  </ItemGroup>

  <!-- Gather all of the bin output and package it as a tool -->
  <!-- For this package in particular we need to copy the .exe (.NET Full) and also the .dll (.NET Core) -->
  <Target Name="PackageTfmSpecificAsATool" Returns="@(TfmSpecificPackageFile)">
    <ItemGroup>
      <_FilesToCopy Include="$(OutDir)\*" />
      <TfmSpecificPackageFile Include="@(_FilesToCopy)">
        <PackagePath>build/$(targetframework)/%(_FilesToCopy.Filename)%(_FilesToCopy.Extension)</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>
</Project>
